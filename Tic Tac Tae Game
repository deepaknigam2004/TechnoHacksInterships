import java.util.Scanner;
class Main 
{
    public static void main(String args[])
    {
        playagain();
    }
    
    public static void playagain()
    {
        Scanner sc1=new Scanner(System.in);
        System.out.println("Enter the Player1 name : ");
        String player1=sc1.next();
        System.out.println("Enter the Player2 name : ");
        String player2=sc1.next();
        TicTacTao t=new TicTacTao();
        HumanPlayer p1=new HumanPlayer(player1,'X');
        HumanPlayer p2=new HumanPlayer(player2,'O');
        
        HumanPlayer cp;
        cp=p1;
        int i,j;
        for(i=0;i<TicTacTao.board.length;i++)
        {
            for(j=0;j<TicTacTao.board.length;j++)
            {
                System.out.println(cp.name+" Turn "+cp.mark);
                cp.makemove();
                t.display();
                if(TicTacTao.colBoardWin() || TicTacTao.rowsBoardWin() || TicTacTao.diagdWin())
                {
                    System.out.println(cp.name + " has Won");
                    i=4;
                    break;
                }
                else
                {
                    if(cp == p1)
                    {
                        cp = p2;
                    }
                    else
                    {
                        cp = p1;
                    }
                }
            }
        }
        if(i!=5)
        System.out.println("Game Draw");
        String playagain="yes";
        System.out.println("This Game Play Again Yes/No");
        String play=sc1.next();
        if(playagain.equalsIgnoreCase(play))
        {
            System.out.println("Start Game");
            playagain();
        }
    }
}

class HumanPlayer
{
    String name;
    char mark;
    
    HumanPlayer(String name,char mark)
    {
        this.name=name;
        this.mark=mark;
        
    }
    
    public void makemove()
    {
        Scanner sc=new Scanner(System.in);
        int row,col;
        do
        {
            System.out.println("Enter the row");
            row=sc.nextInt();
            System.out.println("Enter the column");
            col=sc.nextInt();
        }
        while(!isValidMove(row,col));
    }
    public boolean isValidMove(int row,int col)
    {
        if(row>=0 && row<=2 && col>=0 && col<=2)
        {
            if(TicTacTao.board[row][col]==' ')
            {
                TicTacTao.placeMark(row,col,mark);
                return true;
            }
            else
            {
                System.out.println("You are already fillup this block");
                return false;
            }
        }
        else
        {
            System.out.println("Only for 3x3 otherwise Invalid number ");
        }
        return false;
    }
    
}

class TicTacTao
{
    static int i,j;
    static char[][] board=new char[3][3];;
    TicTacTao()
    {
        board=new char[3][3];
        initial();
    }
    
    public void initial()
    {
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[i].length;j++)
            {
                board[i][j]=' ';
            }
        }
    }
    public void display()
    {
        System.out.println("\n____________");
        for(i=0;i<board.length;i++)
        {
            System.out.print("|");
            for(j=0;j<board[i].length;j++)
            {
                System.out.print(board[i][j]+" | ");
            }
            System.out.println();
            System.out.println("____________\n");
        }
    }
    
    public static void placeMark(int row,int col,char mark)
    {
        if(row>=0 && row<=2 && col>=0 && col<=2)
        {
            board[row][col]=mark;
        }
        else
        {
            System.out.println("Invalid position");
        }
    }
    
    public static boolean colBoardWin()
    {
        for(j=0;j<=2;j++)
        {
            if(board[0][j]!=' ' && board[0][j]==board[1][j] && board[1][j]==board[2][j])
            {
                return true;
            }
        }
        return false;
    }
    
    public static boolean rowsBoardWin()
    {
        for(i=0;i<=2;i++)
        {
            if(board[i][0]!=' ' && board[i][0]==board[i][1] && board[i][1]==board[i][2])
            {
                return true;
            }
        }
        return false;
    }
    
    public static boolean diagdWin()
    {
        if((board[0][0]!=' ' && board[0][0]==board[1][1] && board[1][1]==board[2][2]) || (board[0][0]!= ' ' && board[0][2]==board[1][1] && board[1][1]==board[2][0]))
        {
            return true;
        }
        return false;
    }
     
}
